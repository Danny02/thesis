{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/315",
  "id": 158854912,
  "number": 315,
  "title": "Feature request: Dynamic style configuration",
  "user": {
    "login": "olafurpg",
    "id": 1408093,
    "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/olafurpg",
    "html_url": "https://github.com/olafurpg",
    "followers_url": "https://api.github.com/users/olafurpg/followers",
    "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
    "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
    "organizations_url": "https://api.github.com/users/olafurpg/orgs",
    "repos_url": "https://api.github.com/users/olafurpg/repos",
    "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/olafurpg/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224206324",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224206324",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224206324,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 07:52:08 UTC",
      "updated_at": "2016-06-07 07:52:08 UTC",
      "body": "You probably want to a bit more specific on the identification of such comments, e.g.,\r\n```scala\r\n// scalafmt: --style defaultWithAlign\r\n```"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224207617",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224207617",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224207617,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 07:58:29 UTC",
      "updated_at": "2016-06-07 07:58:29 UTC",
      "body": "Also, can we have `// scalafmt: off`, which would completely disable scalafmt in a section of the code (e.g., if I'm writing parser combinators or another DSL, just want scalafmt not to touch it).\r\n\r\nOh, and something also nice would be to have a `push`/`pop` feature:\r\n```scala\r\nval x = 1\r\nval xx = 2\r\n// scalafmt: push --style defaultWithAlign\r\nval xxx  = 3\r\nval xxxx = 4\r\n// scalafmt: pop\r\nval xxxxx = 5\r\nval xxxxxx = 6\r\n```\r\n`pop` would pop the style config on the top of a stack of configs. A safer version would be to force `pop` to be given the exact same arguments as the corresponding `push`, e.g.,\r\n```scala\r\nval x = 1\r\nval xx = 2\r\n// scalafmt: push --style defaultWithAlign\r\nval xxx  = 3\r\nval xxxx = 4\r\n// scalafmt: pop --style defaultWithAlign\r\nval xxxxx = 5\r\nval xxxxxx = 6\r\n```\r\nAnd if I mess it up, scalafmt should report an error while formatting the file, e.g.,\r\n```scala\r\nval x = 1\r\nval xx = 2\r\n// scalafmt: push --style defaultWithAlign\r\nval xxx  = 3\r\nval xxxx = 4\r\n// scalafmt: pop --javadoc    <-- here scalafmt reports an error\r\nval xxxxx = 5\r\nval xxxxxx = 6\r\n```\r\nThere could also be an error reported at the end of the file if the stack is non-empty at the end of the file."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224214324",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224214324",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224214324,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 08:30:39 UTC",
      "updated_at": "2016-06-07 08:30:39 UTC",
      "body": "Format off is already supported: https://olafurpg.github.io/scalafmt/#//format:off\r\n\r\n\r\n> something also nice would be to have a push/pop feature:\r\n\r\nI like the idea of `pop`. Alternatively, we could name it `reset` and it let it disable all dynamic configuration.\r\n\r\n> A safer version would be to force pop to be given the exact same arguments as the corresponding push.\r\n\r\nIf we have reset, I don't think this will be necessary.\r\n\r\n> There could also be an error reported at the end of the file if the stack is non-empty at the end of the file.\r\n\r\nI think that's unnecessarily strict. For example, you might actually want to change the style for an entire file with a header comment.\r\n"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224214862",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224214862",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224214862,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 08:33:09 UTC",
      "updated_at": "2016-06-07 08:33:09 UTC",
      "body": "BTW. I agree that scalafmt should issueÂ an error if the comments do something wrong, another excellent use case for #290."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224215578",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224215578",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224215578,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 08:36:04 UTC",
      "updated_at": "2016-06-07 08:36:04 UTC",
      "body": "> I think that's unnecessarily strict. For example, you might actually want to change the style for an entire file with a header comment.\r\n\r\nFor that, one would use the non-push variant, which is a hard-set.\r\n\r\n> Alternatively, we could name it reset and it let it disable all dynamic configuration.\r\n\r\nI thought about that too, but `reset` does not let me to nest different levels of reconfiguration."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224218991",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224218991",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224218991,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 08:50:43 UTC",
      "updated_at": "2016-06-07 08:50:43 UTC",
      "body": "I see, so there could be two ways to define dynamic styles\r\n\r\n1. hard-set style: for example `// scalafmt: --maxColumn 150`, which is enabled until the end of the file or if `// scalafmt: reset`.\r\n2. push/pop style: for example `// scalafmt: push --maxColumn 150`, which is enabled until it's popped off `// scalafmt: pop --maxColumn 150`. In this case, I think the safe syntax is a good idea.\r\n\r\nI imagine the hard-set style will cover >90% of use-cases for dynamic style configuration, so that would be a good place to start. If it turns out to be limiting, we can add the push/pop style. However, IMO, if you need to deeply nest dynamic style configurations you're probably doing something fishy. "
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/224221054",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/315#issuecomment-224221054",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/315",
      "id": 224221054,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-06-07 08:59:32 UTC",
      "updated_at": "2016-06-07 08:59:32 UTC",
      "body": "OK"
    }
  ],
  "created_at": "2016-06-07 07:14:56 UTC",
  "updated_at": "2016-06-07 08:59:32 UTC",
  "closed_at": null,
  "body": "Dynamic style configuration allows you to change the style with CLI flags inside comments. For example, increase `--maxColumn` or temporarily enable vertical alignment.\r\n\r\nOriginal:\r\n```scala\r\nval x = 1\r\nval xx = 2\r\n// --style defaultWithAlign\r\nval xxx  = 3\r\nval xxxx = 4\r\n// --style default\r\nval xxxxx = 5\r\nval xxxxxx = 6\r\n```\r\n"
}