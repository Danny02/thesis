{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/185",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/185/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/185/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/185/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/185",
  "id": 149143317,
  "number": 185,
  "title": "Do not break alignment blocks by comment line ",
  "user": {
    "login": "densh",
    "id": 320966,
    "avatar_url": "https://avatars.githubusercontent.com/u/320966?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/densh",
    "html_url": "https://github.com/densh",
    "followers_url": "https://api.github.com/users/densh/followers",
    "following_url": "https://api.github.com/users/densh/following{/other_user}",
    "gists_url": "https://api.github.com/users/densh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/densh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/densh/subscriptions",
    "organizations_url": "https://api.github.com/users/densh/orgs",
    "repos_url": "https://api.github.com/users/densh/repos",
    "events_url": "https://api.github.com/users/densh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/densh/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/labels/alignment",
      "name": "alignment",
      "color": "0052cc"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": [

  ],
  "created_at": "2016-04-18 12:55:22 UTC",
  "updated_at": "2016-04-18 13:07:53 UTC",
  "closed_at": null,
  "body": "Original:\r\n```scala\r\nobject Op {\r\n  // low-level\r\n  final case class Call(ty: Type, ptr: Val, args: Seq[Val])         extends Op\r\n  final case class Load(ty: Type, ptr: Val)                         extends Op\r\n  final case class Store(ty: Type, ptr: Val, value: Val)            extends Op\r\n  // TODO: ty should be a pointee type, not result elem type\r\n  final case class Elem(ty: Type, ptr: Val, indexes: Seq[Val])      extends Op\r\n  final case class Extract(aggr: Val, indexes: Seq[Int])            extends Op\r\n  final case class Insert(aggr: Val, value: Val, indexes: Seq[Int]) extends Op\r\n  final case class Alloca(ty: Type)                                 extends Op\r\n  final case class Bin(bin: nir.Bin, ty: Type, l: Val, r: Val)      extends Op\r\n  final case class Comp(comp: nir.Comp, ty: Type, l: Val, r: Val)   extends Op\r\n  final case class Conv(conv: nir.Conv, ty: Type, value: Val)       extends Op\r\n \r\n  ...\r\n}\r\n```\r\n\r\nScalafmt:\r\n```scala\r\nobject Op {\r\n  // low-level\r\n  final case class Call(ty: Type, ptr: Val, args: Seq[Val]) extends Op\r\n  final case class Load(ty: Type, ptr: Val)                 extends Op\r\n  final case class Store(ty: Type, ptr: Val, value: Val)    extends Op\r\n  // TODO: ty should be a pointee type, not result elem type\r\n  final case class Elem(ty: Type, ptr: Val, indexes: Seq[Val])      extends Op\r\n  final case class Extract(aggr: Val, indexes: Seq[Int])            extends Op\r\n  final case class Insert(aggr: Val, value: Val, indexes: Seq[Int]) extends Op\r\n  final case class Alloca(ty: Type)                                 extends Op\r\n  final case class Bin(bin: nir.Bin, ty: Type, l: Val, r: Val)      extends Op\r\n  final case class Comp(comp: nir.Comp, ty: Type, l: Val, r: Val)   extends Op\r\n  final case class Conv(conv: nir.Conv, ty: Type, value: Val)       extends Op\r\n \r\n  ...\r\n}\r\n```\r\n\r\nI would like for code to stay the way it was. In particular this means that comment line is not considered a block delimiter.\r\n\r\nUsing: 0.2.1\r\n"
}