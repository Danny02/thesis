{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/284",
  "id": 156545969,
  "number": 284,
  "title": "Infix operators should stay the same v2",
  "user": {
    "login": "mtomko",
    "id": 610104,
    "avatar_url": "https://avatars.githubusercontent.com/u/610104?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mtomko",
    "html_url": "https://github.com/mtomko",
    "followers_url": "https://api.github.com/users/mtomko/followers",
    "following_url": "https://api.github.com/users/mtomko/following{/other_user}",
    "gists_url": "https://api.github.com/users/mtomko/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mtomko/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mtomko/subscriptions",
    "organizations_url": "https://api.github.com/users/mtomko/orgs",
    "repos_url": "https://api.github.com/users/mtomko/repos",
    "events_url": "https://api.github.com/users/mtomko/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mtomko/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221356902",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/284#issuecomment-221356902",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284",
      "id": 221356902,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-24 18:12:35 UTC",
      "updated_at": "2016-05-24 18:12:35 UTC",
      "body": "First of all, scalafmt's output seems to fit the 120 character limit:\r\n\r\n```scala\r\n// Column 120                                                                                                          |\r\nobject A {\r\n  private[reports] def headerText(colBarcodes: Seq[String], compat: Boolean): String = {\r\n    s\"Sequence\\tTotal\\t${colBarcodes.mkString(\"\\t\")}\\t\" + (if (compat) \"Construct IDs\" else \"Potential IDs\")\r\n  }\r\n}\r\n```\r\n\r\nHowever, I agree that it would be nice if scalafmt would keep the newline after the `+`. I've struggled a lot with infix applications. I'm starting to lean towards preserving whatever newlines/spaces the original source puts around infix operators, then scalafmt would keep the newline after the `+` in this example."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221365439",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/284#issuecomment-221365439",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284",
      "id": 221365439,
      "user": {
        "login": "mtomko",
        "id": 610104,
        "avatar_url": "https://avatars.githubusercontent.com/u/610104?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mtomko",
        "html_url": "https://github.com/mtomko",
        "followers_url": "https://api.github.com/users/mtomko/followers",
        "following_url": "https://api.github.com/users/mtomko/following{/other_user}",
        "gists_url": "https://api.github.com/users/mtomko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mtomko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mtomko/subscriptions",
        "organizations_url": "https://api.github.com/users/mtomko/orgs",
        "repos_url": "https://api.github.com/users/mtomko/repos",
        "events_url": "https://api.github.com/users/mtomko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mtomko/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-24 18:43:46 UTC",
      "updated_at": "2016-05-24 18:43:46 UTC",
      "body": "Oh, doh, I had my IDE misconfigured. I should have measured before reporting. I agree that there may be some question of whether you should preserve the newline, but given that this does fit within the specified `--maxColumn` this is an inappropriate example.\r\n\r\nTo expound on the \"preserve newlines\" argument, I guess you could say that  when a programmer chooses to break a line on an infix operator, perhaps that's implying some semantic reason for doing so. That is, the programmer is suggesting a sensible break where the code before that operator makes sense by itself, and the code after that operator makes sense by itself. So maybe there's no need to *eliminate* existing line breaks, but I definitely agree that scalafmt should consider *introducing* them when lines exceed the configured maximum width.\r\n\r\nThanks!"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221365993",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/284#issuecomment-221365993",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284",
      "id": 221365993,
      "user": {
        "login": "mtomko",
        "id": 610104,
        "avatar_url": "https://avatars.githubusercontent.com/u/610104?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mtomko",
        "html_url": "https://github.com/mtomko",
        "followers_url": "https://api.github.com/users/mtomko/followers",
        "following_url": "https://api.github.com/users/mtomko/following{/other_user}",
        "gists_url": "https://api.github.com/users/mtomko/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mtomko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mtomko/subscriptions",
        "organizations_url": "https://api.github.com/users/mtomko/orgs",
        "repos_url": "https://api.github.com/users/mtomko/repos",
        "events_url": "https://api.github.com/users/mtomko/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mtomko/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-24 18:45:38 UTC",
      "updated_at": "2016-05-24 18:45:38 UTC",
      "body": "Interesting. I changed the `--maxColumn` setting to 100 and scalafmt gave me:\r\n\r\n```scala\r\n  private[reports] def headerText(colBarcodes: Seq[String], compat: Boolean): String = {\r\n    s\"Sequence\\tTotal\\t${colBarcodes.mkString(\"\\t\")}\\t\" + (if (compat) \"Construct IDs\"\r\n                                                           else \"Potential IDs\")\r\n  }\r\n```\r\nIn this case, I *definitely* prefer my prior formatting because it seems that the infix operator should bind more loosely than the parenthesized expression.\r\n"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221378751",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/284#issuecomment-221378751",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284",
      "id": 221378751,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-24 19:35:13 UTC",
      "updated_at": "2016-05-24 19:35:13 UTC",
      "body": ">  it seems that the infix operator should bind more loosely than the parenthesized expression.\r\n\r\nI agree. The thing is that infix operators turned out to be trickier than I anticipated, so I haven't been succesful at modeling such ideas. In 0.2.6 I changed the rules to take whatever the user provided, except when the operator is one of `+ - && ||` and the right hand side starts with `(`. That's a silly exception that's causing problems in your example. I can remove it in the next release."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221379002",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/284#issuecomment-221379002",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/284",
      "id": 221379002,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-24 19:36:20 UTC",
      "updated_at": "2016-05-24 19:36:20 UTC",
      "body": "Related issues #219 and #267"
    }
  ],
  "created_at": "2016-05-24 16:01:21 UTC",
  "updated_at": "2016-05-24 19:36:20 UTC",
  "closed_at": null,
  "body": "Thanks for putting this tool together. I noticed this quirk and wasn't sure if it was intentional:\r\n\r\nOriginal:\r\n```scala\r\n  private[reports] def headerText(colBarcodes: Seq[String], compat: Boolean): String = {\r\n    s\"Sequence\\tTotal\\t${colBarcodes.mkString(\"\\t\")}\\t\" +\r\n    (if (compat) \"Construct IDs\" else \"Potential IDs\")\r\n  }\r\n```\r\n\r\nScalafmt:\r\n```scala\r\n  private[reports] def headerText(colBarcodes: Seq[String], compat: Boolean): String = {\r\n    s\"Sequence\\tTotal\\t${colBarcodes.mkString(\"\\t\")}\\t\" + (if (compat) \"Construct IDs\" else \"Potential IDs\")\r\n  }\r\n```\r\n\r\nI'm not sure my original formatting is the ideal solution in this case; however it seems that scalafmt should respect the `--maxColumns` setting rather than removing the line break after the `+` operator.\r\n```scala\r\n  private[reports] def headerText(colBarcodes: Seq[String], compat: Boolean): String = {\r\n    s\"Sequence\\tTotal\\t${colBarcodes.mkString(\"\\t\")}\\t\" +\r\n    (if (compat) \"Construct IDs\" else \"Potential IDs\")\r\n  }\r\n```\r\n\r\nUsing:\r\n* 0.2.5\r\n* --style default\r\n\r\nI ran the transformation using the IntelliJ plugin, but I doubt that's relevant. My .scalafmt:\r\n```\r\n-s default\r\n--allowNewlineBeforeColonInMassiveReturnTypes false\r\n--maxColumn 120\r\n```"
}