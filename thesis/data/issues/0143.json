{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/143",
  "id": 145997793,
  "number": 143,
  "title": "Possibility to configure for single-indent parentheses?",
  "user": {
    "login": "lihaoyi",
    "id": 934140,
    "avatar_url": "https://avatars.githubusercontent.com/u/934140?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lihaoyi",
    "html_url": "https://github.com/lihaoyi",
    "followers_url": "https://api.github.com/users/lihaoyi/followers",
    "following_url": "https://api.github.com/users/lihaoyi/following{/other_user}",
    "gists_url": "https://api.github.com/users/lihaoyi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lihaoyi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lihaoyi/subscriptions",
    "organizations_url": "https://api.github.com/users/lihaoyi/orgs",
    "repos_url": "https://api.github.com/users/lihaoyi/repos",
    "events_url": "https://api.github.com/users/lihaoyi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lihaoyi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "milestone": {
    "url": "https://api.github.com/repos/olafurpg/scalafmt/milestones/1",
    "html_url": "https://github.com/olafurpg/scalafmt/milestones/0.2.0",
    "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/milestones/1/labels",
    "id": 1634902,
    "number": 1,
    "title": "0.2.0",
    "description": "",
    "creator": {
      "login": "olafurpg",
      "id": 1408093,
      "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olafurpg",
      "html_url": "https://github.com/olafurpg",
      "followers_url": "https://api.github.com/users/olafurpg/followers",
      "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
      "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
      "organizations_url": "https://api.github.com/users/olafurpg/orgs",
      "repos_url": "https://api.github.com/users/olafurpg/repos",
      "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olafurpg/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 5,
    "state": "closed",
    "created_at": "2016-03-09 17:54:56 UTC",
    "updated_at": "2016-04-19 15:54:22 UTC",
    "due_on": null,
    "closed_at": "2016-04-12 19:34:12 UTC"
  },
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/205860863",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/143#issuecomment-205860863",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143",
      "id": 205860863,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-05 15:35:33 UTC",
      "updated_at": "2016-04-05 15:35:33 UTC",
      "body": "I agree it should possible to configure the continuation indent for `(`s. I' experienced the same issue you describe with Scalatags HTML templates, it's almost impossible to use 4 space indentation and keep within the 80 column limit.\r\n\r\nHowever, what do you think the indentation should be for arguments of `def`/`class`?\r\n\r\n```scala\r\n// column          |\r\ndef point(\r\n  x: Int,\r\n  y: Int): Point =\r\n  Point(x, y)\r\n```\r\nIt bothers me that the arguments align with the function body. If you agree, what do you think the two configuration options should be named? One suggestion, `continuationIndentCallSite` and `continuationIndentDefinitionSite`.\r\n\r\nI just released 0.1.6 ([changelog](http://olafurpg.github.io/scalafmt/#0.1.6)), which makes a lot of progress on formatting almost any arbitrary Scala code. I hope to start working soon on 0.2.x, which will focus on adding configuration options for different coding styles, such as this issue."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/205864505",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/143#issuecomment-205864505",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143",
      "id": 205864505,
      "user": {
        "login": "lihaoyi",
        "id": 934140,
        "avatar_url": "https://avatars.githubusercontent.com/u/934140?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lihaoyi",
        "html_url": "https://github.com/lihaoyi",
        "followers_url": "https://api.github.com/users/lihaoyi/followers",
        "following_url": "https://api.github.com/users/lihaoyi/following{/other_user}",
        "gists_url": "https://api.github.com/users/lihaoyi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lihaoyi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lihaoyi/subscriptions",
        "organizations_url": "https://api.github.com/users/lihaoyi/orgs",
        "repos_url": "https://api.github.com/users/lihaoyi/repos",
        "events_url": "https://api.github.com/users/lihaoyi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lihaoyi/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-05 15:45:37 UTC",
      "updated_at": "2016-04-05 15:48:14 UTC",
      "body": "I've been using\r\n\r\n```scala\r\ndef point(x: Int,\r\n          y: Int): Point = {\r\n  Point(x, y)\r\n}\r\n```\r\n\r\nWhy? Because it's IntelliJ's default, and that's a strong enough reason for me. I've seen other people use it too. This also works\r\n\r\n```scala\r\ndef point(\r\n  x: Int,\r\n  y: Int\r\n): Point = {\r\n  Point(x, y)\r\n}\r\n```\r\nIf you want to be consistent with the above indentation, you just have to be consistent with the placement of parens, and it all looks great. Looks better than the earlier case when the arguments or their types are very long and maybe even need to start wrapping.\r\n\r\nI don't do this because IntelliJ does it differently but i don't feel strongly about either. The first looks better when the number/size of params is small, the second looks better when you have tons of params each very long"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/205869972",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/143#issuecomment-205869972",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143",
      "id": 205869972,
      "user": {
        "login": "lihaoyi",
        "id": 934140,
        "avatar_url": "https://avatars.githubusercontent.com/u/934140?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lihaoyi",
        "html_url": "https://github.com/lihaoyi",
        "followers_url": "https://api.github.com/users/lihaoyi/followers",
        "following_url": "https://api.github.com/users/lihaoyi/following{/other_user}",
        "gists_url": "https://api.github.com/users/lihaoyi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lihaoyi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lihaoyi/subscriptions",
        "organizations_url": "https://api.github.com/users/lihaoyi/orgs",
        "repos_url": "https://api.github.com/users/lihaoyi/repos",
        "events_url": "https://api.github.com/users/lihaoyi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lihaoyi/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-05 16:00:11 UTC",
      "updated_at": "2016-04-05 16:00:11 UTC",
      "body": "To answer your other question about what to call it, I have no preference, pick whatever you want =)"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/205871443",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/143#issuecomment-205871443",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143",
      "id": 205871443,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-05 16:03:16 UTC",
      "updated_at": "2016-04-05 16:03:16 UTC",
      "body": "[Here](http://localhost:3000/readme/target/scalatex/#Functionapplication) is what scalafmt does at the moment. It will try to align by the opening `(` (option 3), but in the example above that will break the column limit at `|`\r\n\r\n```scala\r\n// column          |\r\ndef point(x: Int,\r\n          y: Int): Point = {\r\n  Point(x, y)\r\n}\r\n``` \r\n\r\nThe second suggestion you propose is the \"config\" style (option 5), which is opt-in by adding a newline before closing `)`. Option 4 is the same as config style except it doesn't put newline before the closing `)`.\r\n\r\nI'll go with both `continuationIndentCallSite` and `continuationIndentDefinitionSite` when I implement this then, in your case you can use 2 for both and opt-in for config style when you want a newline before `)`, indented at 0."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209077760",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/143#issuecomment-209077760",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/143",
      "id": 209077760,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-12 19:54:57 UTC",
      "updated_at": "2016-04-12 19:54:57 UTC",
      "body": "Just released 0.2.0. You can now create a `.scalafmt` file in the root of your project with\r\n\r\n```\r\n--continuationIndentCallSite 2\r\n--continuationIndentDefnSite 2\r\n```\r\n\r\nThe intellij plugin should pick it up. Unfortunately, you need to restart intellij if you edit `.scalafmt`, I hope to make that easier some future release. More docs on custom configuration are [here](https://olafurpg.github.io/scalafmt/#Configuration)."
    }
  ],
  "created_at": "2016-04-05 13:59:04 UTC",
  "updated_at": "2016-04-12 19:54:57 UTC",
  "closed_at": "2016-04-12 18:47:49 UTC",
  "body": "This is the style I've been using for a while, and i've seen it used in a bunch of places.\r\n\r\nOriginal:\r\n```scala\r\nobject FormatMe { List(number) match { case head :: Nil if head % 2 == 0 => \"number is even\"\r\n  case head :: Nil => \"number is not even\"\r\n  case Nil => \"List is empty\" }\r\n  function(arg1, arg2(arg3(arg4, arg5, \"arg6\"), arg7 + arg8), arg9.select(1, 2, 3, 4, 5, 6)) }\r\n```\r\n\r\nScalafmt:\r\n```scala\r\nobject FormatMe {\r\n  List(number) match {\r\n    case head :: Nil\r\n        if head % 2 == 0 =>\r\n      \"number is even\"\r\n    case head :: Nil =>\r\n      \"number is not even\"\r\n    case Nil => \"List is empty\"\r\n  }\r\n  function(\r\n      arg1,\r\n      arg2(arg3(arg4, arg5, \"arg6\"),\r\n           arg7 + arg8),\r\n      arg9.select(1, 2, 3, 4, 5, 6))\r\n}\r\n```\r\n\r\nI would like the input to look like this:\r\n```scala\r\nobject FormatMe {\r\n  List(number) match {\r\n    case head :: Nil\r\n        if head % 2 == 0 =>\r\n      \"number is even\"\r\n    case head :: Nil =>\r\n      \"number is not even\"\r\n    case Nil => \"List is empty\"\r\n  }\r\n  function(\r\n    arg1,\r\n    arg2(\r\n      arg3(arg4, arg5, \"arg6\"),\r\n      arg7 + arg8\r\n    ),\r\n    arg9.select(1, 2, 3, 4, 5, 6)\r\n  )\r\n}\r\n```\r\n\r\nUsing\r\n* 0.1.x\r\n\r\n\r\nMain points:\r\n\r\n- `(`s result in a two-space indent, just like `{`s\r\n- `(`s and `)`s are new-lined just like `{`s and `}`s\r\n\r\nThis is most useful when working with non-trivial nested expressions, e.g. Scalatags HTML templates:\r\n\r\n```scala\r\nhtml(\r\n  head(\r\n    script(src:=\"...\"),\r\n    script(\r\n      \"alert('Hello World')\"\r\n    )\r\n  ),\r\n  body(\r\n    div(\r\n      h1(id:=\"title\", \"This is a title\"),\r\n      p(\"This is a big paragraph of text\")\r\n    )\r\n  )\r\n)\r\n```\r\n```scala\r\n\r\n  html(\r\n    head(\r\n      script(\"some script\")\r\n    ),\r\n    body(\r\n      h1(\"This is my title\"),\r\n      div(\"posts\"),\r\n      for ((name, text) <- posts) yield div(\r\n        h2(\"Post by \", name),\r\n        p(text)\r\n      ),\r\n      if(numVisitors > 100) p(\"No more posts!\")\r\n      else p(\"Please post below...\")\r\n    )\r\n  )\r\n```\r\n\r\nWhich result in huge amounts of indentation using double-indents, and look totally unreadable using the current lisp-style parentheses since the large numbers of closing parentheses bunched together messes with your head. OTOH with the proposed formatting style it is laid out almost exactly the same as HTML is laid out and is just as readable"
}