{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/281",
  "id": 156309385,
  "number": 281,
  "title": "Suggestions about names",
  "user": {
    "login": "Dveim",
    "id": 3515147,
    "avatar_url": "https://avatars.githubusercontent.com/u/3515147?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Dveim",
    "html_url": "https://github.com/Dveim",
    "followers_url": "https://api.github.com/users/Dveim/followers",
    "following_url": "https://api.github.com/users/Dveim/following{/other_user}",
    "gists_url": "https://api.github.com/users/Dveim/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Dveim/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Dveim/subscriptions",
    "organizations_url": "https://api.github.com/users/Dveim/orgs",
    "repos_url": "https://api.github.com/users/Dveim/repos",
    "events_url": "https://api.github.com/users/Dveim/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Dveim/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221025176",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/281#issuecomment-221025176",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281",
      "id": 221025176,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-23 16:34:29 UTC",
      "updated_at": "2016-05-23 16:34:48 UTC",
      "body": "I agree that having such a tool would be incredibly useful. I think other formatters like rustfmt actually run this sort of analysis.\r\n\r\nIn my opinion, this analysis belongs to another tool such as `scala-tidy` (see [clang-tidy](http://clang.llvm.org/extra/clang-tidy/)). Most importantly, the tool should be able to automatically fix linting issues, which will require semantic information that scalafmt does not have."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221047878",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/281#issuecomment-221047878",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281",
      "id": 221047878,
      "user": {
        "login": "Dveim",
        "id": 3515147,
        "avatar_url": "https://avatars.githubusercontent.com/u/3515147?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Dveim",
        "html_url": "https://github.com/Dveim",
        "followers_url": "https://api.github.com/users/Dveim/followers",
        "following_url": "https://api.github.com/users/Dveim/following{/other_user}",
        "gists_url": "https://api.github.com/users/Dveim/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Dveim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Dveim/subscriptions",
        "organizations_url": "https://api.github.com/users/Dveim/orgs",
        "repos_url": "https://api.github.com/users/Dveim/repos",
        "events_url": "https://api.github.com/users/Dveim/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Dveim/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-23 18:02:26 UTC",
      "updated_at": "2016-05-23 18:29:27 UTC",
      "body": "Could you please explain, what do you mean by \"automatically fix linting issues\"? As far as I understand, best thing that tool can do with something like \"too long method name\" is raise a warning. Sometimes it is possible to guess preferred short name, but, in general, it is really hard linguistic problem (let alone other types of warnings)."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221089486",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/281#issuecomment-221089486",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281",
      "id": 221089486,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-23 20:40:19 UTC",
      "updated_at": "2016-05-23 20:40:19 UTC",
      "body": "Sounds like what you are describing can be achieved with scalastyle, for example as a [method name checker](http://www.scalastyle.org/rules-0.8.0.html#org_scalastyle_scalariform_MethodNamesChecker)."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221107307",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/281#issuecomment-221107307",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281",
      "id": 221107307,
      "user": {
        "login": "Dveim",
        "id": 3515147,
        "avatar_url": "https://avatars.githubusercontent.com/u/3515147?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Dveim",
        "html_url": "https://github.com/Dveim",
        "followers_url": "https://api.github.com/users/Dveim/followers",
        "following_url": "https://api.github.com/users/Dveim/following{/other_user}",
        "gists_url": "https://api.github.com/users/Dveim/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Dveim/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Dveim/subscriptions",
        "organizations_url": "https://api.github.com/users/Dveim/orgs",
        "repos_url": "https://api.github.com/users/Dveim/repos",
        "events_url": "https://api.github.com/users/Dveim/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Dveim/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-23 21:52:13 UTC",
      "updated_at": "2016-05-23 21:53:06 UTC",
      "body": "Not sure if regex check would be enough. In my understanding, some statistical analysis (interaction with whole project) would be needed.\r\n\r\nFor example, guideline \"_Wider-scoped names should be Longer_\". So one should estimate the \"size\" of scope for given name (for simplicity, is it globally accessible or not), and then compare length with some threshold (for example, 4). If name's length is < 4, then warn user.\r\n\r\nAnother one, \"_More-used Names should be Shorter_\". Here one should define function \"frequency => acceptable length\" and apply given name. But there are other features, for example, \"is given name using special symbols\", so real-world implementation for this guideline might be challenging.\r\n\r\nHowever, I don't know if it is possible to find number of usages for given variable/method now."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/221109149",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/281#issuecomment-221109149",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/281",
      "id": 221109149,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-23 22:00:24 UTC",
      "updated_at": "2016-05-23 22:00:24 UTC",
      "body": "Interesting. A regex is definitely not enough for that kind of analysis. This sounds like a glove fit for scala.meta, as I imagine most can be done purely syntactically. This analysis is still orthogonal to scalafmt, it would basically accept different input (whole projects) and return different values (name warnings).\r\n\r\nI encourage you to take a look at scala.meta, I imagine a proof-of-concept can be implemented in <100 LOC."
    }
  ],
  "created_at": "2016-05-23 16:15:17 UTC",
  "updated_at": "2016-05-24 07:55:19 UTC",
  "closed_at": "2016-05-24 07:55:19 UTC",
  "body": "Would be nice if scalafmt could give some advices about naming. It is possible to create a method naming convention, based on [StrategicScalaStyle](http://www.lihaoyi.com/post/StrategicScalaStyleConcisenessNames.html)-like guides. Some of those guidelines can be checked statistically for given project.\r\n\r\nThis might be out of scope for scalafmt, because no reasonable autocorrection exist, and each warning require human attention. However, this might be really useful feature."
}