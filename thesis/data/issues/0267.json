{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/267",
  "id": 155747110,
  "number": 267,
  "title": "(Chains of) infix applications",
  "user": {
    "login": "sjrd",
    "id": 535934,
    "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sjrd",
    "html_url": "https://github.com/sjrd",
    "followers_url": "https://api.github.com/users/sjrd/followers",
    "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
    "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
    "organizations_url": "https://api.github.com/users/sjrd/orgs",
    "repos_url": "https://api.github.com/users/sjrd/repos",
    "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sjrd/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/220345047",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/267#issuecomment-220345047",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267",
      "id": 220345047,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-19 14:40:44 UTC",
      "updated_at": "2016-05-19 14:40:44 UTC",
      "body": "```scala\r\n   private[this] val _areTypedArraysSupported = {\r\n     // Here we use `assumingES6` to dce the 4 subsequent tests\r\n-    assumingES6 || js.DynamicImplicits.truthValue(\r\n-        global.ArrayBuffer && global.Int32Array &&\r\n-        global.Float32Array && global.Float64Array)\r\n+    assumingES6 || js.DynamicImplicits.truthValue(global.ArrayBuffer &&\r\n+        global.Int32Array && global.Float32Array && global.Float64Array)\r\n   }\r\n```"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/220349686",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/267#issuecomment-220349686",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267",
      "id": 220349686,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-19 14:55:33 UTC",
      "updated_at": "2016-05-19 14:55:33 UTC",
      "body": "```scala\r\n     var shift =\r\n-      inlineNumberOfLeadingZeros(blo, bhi) - inlineNumberOfLeadingZeros(alo, ahi)\r\n+      inlineNumberOfLeadingZeros(blo, bhi) - inlineNumberOfLeadingZeros(alo,\r\n+          ahi)\r\n```"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/220351270",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/267#issuecomment-220351270",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/267",
      "id": 220351270,
      "user": {
        "login": "sjrd",
        "id": 535934,
        "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sjrd",
        "html_url": "https://github.com/sjrd",
        "followers_url": "https://api.github.com/users/sjrd/followers",
        "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
        "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
        "organizations_url": "https://api.github.com/users/sjrd/orgs",
        "repos_url": "https://api.github.com/users/sjrd/repos",
        "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sjrd/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-19 15:00:18 UTC",
      "updated_at": "2016-05-19 15:00:18 UTC",
      "body": "Positive:\r\n```scala\r\n     if (other == null) {\r\n       throw new NullPointerException()\r\n-    } else if (toffset < 0 || ooffset < 0 || toffset + len > thiz.length || ooffset + len > \r\n+    } else if (toffset < 0 || ooffset < 0 || toffset + len > thiz.length ||\r\n+        ooffset + len > other.length) {\r\n       false\r\n     } else if (len <= 0) {\r\n       true\r\n     }\r\n```"
    }
  ],
  "created_at": "2016-05-19 14:14:06 UTC",
  "updated_at": "2016-05-19 15:00:18 UTC",
  "closed_at": null,
  "body": "Original:\r\n```scala\r\n        params.size >= thatParams.size &&\r\n        resultType <:< thatResultType &&\r\n        unused.forall(_.isDefault) &&\r\n        (used zip thatParams).forall { case (x, y) => x.conformsTo(y) }\r\n```\r\n\r\nScalafmt:\r\n```scala\r\n        params.size >= thatParams.size && resultType <:< thatResultType &&\r\n        unused.forall(_.isDefault) && (used zip thatParams).forall {\r\n          case (x, y) => x.conformsTo(y)\r\n        }\r\n```\r\n\r\nI would like the input to look like this:\r\n```scala\r\n        params.size >= thatParams.size &&\r\n        resultType <:< thatResultType &&\r\n        unused.forall(_.isDefault) &&\r\n        (used zip thatParams).forall {\r\n          case (x, y) => x.conformsTo(y)\r\n        }\r\n```\r\n\r\nAlthough, if there was `()` around an inner `&&`, I'd like for example:\r\n```scala\r\n        (params.size >= thatParams.size && resultType <:< thatResultType) &&\r\n        unused.forall(_.isDefault) &&\r\n        (used zip thatParams).forall {\r\n          case (x, y) => x.conformsTo(y)\r\n        }\r\n```\r\n\r\nUsing\r\n* 0.1.x\r\n"
}