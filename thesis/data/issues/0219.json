{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/219",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/219/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/219/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/219/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/219",
  "id": 154011720,
  "number": 219,
  "title": "Infix application should stay.",
  "user": {
    "login": "nicolasstucki",
    "id": 3648029,
    "avatar_url": "https://avatars.githubusercontent.com/u/3648029?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nicolasstucki",
    "html_url": "https://github.com/nicolasstucki",
    "followers_url": "https://api.github.com/users/nicolasstucki/followers",
    "following_url": "https://api.github.com/users/nicolasstucki/following{/other_user}",
    "gists_url": "https://api.github.com/users/nicolasstucki/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nicolasstucki/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nicolasstucki/subscriptions",
    "organizations_url": "https://api.github.com/users/nicolasstucki/orgs",
    "repos_url": "https://api.github.com/users/nicolasstucki/repos",
    "events_url": "https://api.github.com/users/nicolasstucki/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nicolasstucki/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "milestone": {
    "url": "https://api.github.com/repos/olafurpg/scalafmt/milestones/4",
    "html_url": "https://github.com/olafurpg/scalafmt/milestones/0.2.4",
    "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/milestones/4/labels",
    "id": 1752044,
    "number": 4,
    "title": "0.2.4",
    "description": "",
    "creator": {
      "login": "olafurpg",
      "id": 1408093,
      "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olafurpg",
      "html_url": "https://github.com/olafurpg",
      "followers_url": "https://api.github.com/users/olafurpg/followers",
      "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
      "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
      "organizations_url": "https://api.github.com/users/olafurpg/orgs",
      "repos_url": "https://api.github.com/users/olafurpg/repos",
      "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olafurpg/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 18,
    "state": "closed",
    "created_at": "2016-05-06 17:24:18 UTC",
    "updated_at": "2016-06-06 08:43:39 UTC",
    "due_on": null,
    "closed_at": "2016-06-06 08:43:39 UTC"
  },
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/218792199",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/219#issuecomment-218792199",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/219",
      "id": 218792199,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-12 15:24:46 UTC",
      "updated_at": "2016-05-12 15:24:46 UTC",
      "body": "Excellent issue. I've seen some cases where scalafmt produces terrible diffs because of this:\r\n\r\n```scala\r\nprivate[controllers] def doClose(user: UserModel) =\r\n -    (UserRepo disable user) >>-\r\n -      env.onlineUserIdMemo.remove(user.id) >>\r\n -      relationEnv.api.unfollowAll(user.id) >>\r\n -      Env.team.api.quitAll(user.id) >>-\r\n -      Env.challenge.api.removeByUserId(user.id) >>-\r\n -      Env.tournament.api.withdrawAll(user) >>\r\n -      (Env.security disconnect user.id)\r\n -\r\n -  def kid = Auth { implicit ctx =>\r\n -    me =>\r\n -      Ok(html.account.kid(me)).fuccess\r\n +    (UserRepo disable user) >>- env.onlineUserIdMemo.remove(user.id) >> relationEnv.api\r\n +      .unfollowAll(user.id) >> Env.team.api.quitAll(user.id) >>- Env.challenge.api\r\n +      .removeByUserId(user.id) >>- Env.tournament.api.withdrawAll(user) >>\r\n +    (Env.security disconnect user.id)\r\n +\r\n```"
    }
  ],
  "created_at": "2016-05-10 13:52:17 UTC",
  "updated_at": "2016-05-13 08:20:09 UTC",
  "closed_at": "2016-05-13 08:20:09 UTC",
  "body": "Original:\r\n```scala\r\n@@ -45,9 +46,8 @@ abstract class AbstractSeleniumJSRunner(browserProvider: SeleniumBrowser,\r\n     val inits = initFiles()\r\n \r\n     val jsFiles = {\r\n-      inits.map(materializer.materialize(_).toString) ++\r\n-      libs.map(dep => materializer.materialize(dep.lib).toString) :+\r\n-      code.path\r\n+      inits.map(materializer.materialize(_).toString) ++ libs.map(\r\n+          dep => materializer.materialize(dep.lib).toString) :+ code.path\r\n     }\r\n     val page = htmlPage(jsFiles)\r\n```\r\n"
}