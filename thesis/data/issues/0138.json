{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/138",
  "id": 145416265,
  "number": 138,
  "title": "Assignments should be aligned by Equals sign",
  "user": {
    "login": "Nutomic",
    "id": 1044450,
    "avatar_url": "https://avatars.githubusercontent.com/u/1044450?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Nutomic",
    "html_url": "https://github.com/Nutomic",
    "followers_url": "https://api.github.com/users/Nutomic/followers",
    "following_url": "https://api.github.com/users/Nutomic/following{/other_user}",
    "gists_url": "https://api.github.com/users/Nutomic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Nutomic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Nutomic/subscriptions",
    "organizations_url": "https://api.github.com/users/Nutomic/orgs",
    "repos_url": "https://api.github.com/users/Nutomic/repos",
    "events_url": "https://api.github.com/users/Nutomic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Nutomic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "milestone": {
    "url": "https://api.github.com/repos/olafurpg/scalafmt/milestones/1",
    "html_url": "https://github.com/olafurpg/scalafmt/milestones/0.2.0",
    "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/milestones/1/labels",
    "id": 1634902,
    "number": 1,
    "title": "0.2.0",
    "description": "",
    "creator": {
      "login": "olafurpg",
      "id": 1408093,
      "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olafurpg",
      "html_url": "https://github.com/olafurpg",
      "followers_url": "https://api.github.com/users/olafurpg/followers",
      "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
      "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
      "organizations_url": "https://api.github.com/users/olafurpg/orgs",
      "repos_url": "https://api.github.com/users/olafurpg/repos",
      "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olafurpg/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 5,
    "state": "closed",
    "created_at": "2016-03-09 17:54:56 UTC",
    "updated_at": "2016-04-19 15:54:22 UTC",
    "due_on": null,
    "closed_at": "2016-04-12 19:34:12 UTC"
  },
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/204818734",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-204818734",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 204818734,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-02 23:06:43 UTC",
      "updated_at": "2016-04-02 23:32:10 UTC",
      "body": "I agree that aligning sequences of statements by certain tokens, like your examples, would be super cool. Also, other popular formatters like clang-format do this for specific cases. However, the devil lies in the details. To help me understand your expectations, could you answer these questions:\r\n\r\n* Should this feature be enabled globally or only for specific blocks? If enabled for block, how would you enable it? If enabled globally, how would you format the following?\r\n\r\n```scala\r\nobject A {\r\n  val abba = \"cool\"\r\n  @inline\r\n  val easyCase = 'best\r\n\r\n  val x = 2\r\n  final val itGetsTricker = 22222\r\n  var foobar = \"kaz\"\r\n  def add(a: Int, b: Int): Int = a + b\r\n  val x = mutable.ListBuffer(1, 2)\r\n  x += 3\r\n\r\n  // Also align comments?\r\n  val iHaveComment = \"value\" // this is comment 1\r\n  val meToo = \"bananas are the best\" // this is comment 2\r\n  val waterloo = 'nocomment\r\n\r\n  // should we alignt named arguments?\r\n  function(a = 1,\r\n           baz = \"bar\",\r\n           kazam = boom)\r\n  function2(a = 1, // does = in function2 align with = in function?\r\n            baz = \"bar\",\r\n            kazam = boom)\r\n\r\n  // what about default values?\r\n  def function(a: Int = 1,\r\n               baz2: String = 2,\r\n               baz: String,\r\n               kazam: Symbol = 'boom): Int = 2\r\n  var shouldThisAlignWithFunction_? = _\r\n}\r\n\r\n```\r\n\r\n* Do you only want to align equal signs orÂ do you also want to align by other tokens? If other tokens, which ones? For example, `=>` in pattern matching, opening parenthesis in case class or `extends` in a sealed trait. Hypothetical example:\r\n\r\n```scala\r\nsealed abstract class Super\r\ncase class A  (a:   Int)           extends Super\r\ncase class Ba (baa: Int, a:   B)   extends Super\r\ncase class Baa(ba:  Int, baa: Baa) extends Super\r\n```"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/204827295",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-204827295",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 204827295,
      "user": {
        "login": "Nutomic",
        "id": 1044450,
        "avatar_url": "https://avatars.githubusercontent.com/u/1044450?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Nutomic",
        "html_url": "https://github.com/Nutomic",
        "followers_url": "https://api.github.com/users/Nutomic/followers",
        "following_url": "https://api.github.com/users/Nutomic/following{/other_user}",
        "gists_url": "https://api.github.com/users/Nutomic/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Nutomic/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Nutomic/subscriptions",
        "organizations_url": "https://api.github.com/users/Nutomic/orgs",
        "repos_url": "https://api.github.com/users/Nutomic/repos",
        "events_url": "https://api.github.com/users/Nutomic/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Nutomic/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-02 23:37:41 UTC",
      "updated_at": "2016-04-02 23:37:41 UTC",
      "body": "Do you also reorder items (ie member declarations) in a class? If not, I'd say this should only be applied to items of the same type that don't have anything between them. Comment alignment would also be nice in that case. I'm not sure about arguments or default values, that's probably stuff for another issue.\r\n\r\nI guess it would be pretty nice to align lines that are very similar and close by each other. But those cases seem rather rare. I would totally be fine with just considering the assignment operator for now."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/204827613",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-204827613",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 204827613,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-02 23:42:47 UTC",
      "updated_at": "2016-04-02 23:42:47 UTC",
      "body": "> Do you also reorder items (ie member declarations) in a class?\r\n\r\nNope. Pure whitespace changes, AST must remain identical.\r\n\r\n> align lines that are very similar\r\n\r\nCould you be more specific here? For example, what if a def takes arguments or has explicit return type:\r\n\r\n```scala\r\n  def address = column[String](\"address\", O.PrimaryKey)\r\n  def name(str: String) = column[String](str)\r\n  def status = column[Int](\"status\")\r\n  def statusWithReturnType: Column[Int]  = column[Int](\"status\")\r\n```\r\n\r\n> that's probably stuff for another issue.\r\n\r\nI agree, but the implementation will rely on similar mechanics so I was curious to know your opinion :smile: "
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/204827910",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-204827910",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 204827910,
      "user": {
        "login": "Nutomic",
        "id": 1044450,
        "avatar_url": "https://avatars.githubusercontent.com/u/1044450?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Nutomic",
        "html_url": "https://github.com/Nutomic",
        "followers_url": "https://api.github.com/users/Nutomic/followers",
        "following_url": "https://api.github.com/users/Nutomic/following{/other_user}",
        "gists_url": "https://api.github.com/users/Nutomic/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Nutomic/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Nutomic/subscriptions",
        "organizations_url": "https://api.github.com/users/Nutomic/orgs",
        "repos_url": "https://api.github.com/users/Nutomic/repos",
        "events_url": "https://api.github.com/users/Nutomic/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Nutomic/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-02 23:48:11 UTC",
      "updated_at": "2016-04-02 23:48:11 UTC",
      "body": "That case looks pretty complicated. I would be totally fine with a rule that affects only patterns of `val/var name = something` (so not `name(str: String)`), and only if it fits in one line, and there's nothing in between the affected lines.\r\n\r\n"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/204831207",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-204831207",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 204831207,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-03 00:04:18 UTC",
      "updated_at": "2016-04-03 00:04:18 UTC",
      "body": "Good, it's become quite narrow then. This should fit well with the alignment of `=>` in pattern matching, which has been requested offline.\r\n\r\nI asked the folks on the gitter channel for their opinions on this, wouldÂ like to get a better understanding of what people think. We'll give it a few days."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206415447",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206415447",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206415447,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 14:57:36 UTC",
      "updated_at": "2016-04-06 14:57:36 UTC",
      "body": "Hi. I've thought about this subject far more than is healthy. I believe I could write a PhD thesis on it. Exciting to see it being taken seriously. To automatically format my scala code on a continuous basis would be the realization of a long-held dream, still impossible over the absence of the feature being described here."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206417836",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206417836",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206417836,
      "user": {
        "login": "dwijnand",
        "id": 344610,
        "avatar_url": "https://avatars.githubusercontent.com/u/344610?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dwijnand",
        "html_url": "https://github.com/dwijnand",
        "followers_url": "https://api.github.com/users/dwijnand/followers",
        "following_url": "https://api.github.com/users/dwijnand/following{/other_user}",
        "gists_url": "https://api.github.com/users/dwijnand/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dwijnand/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dwijnand/subscriptions",
        "organizations_url": "https://api.github.com/users/dwijnand/orgs",
        "repos_url": "https://api.github.com/users/dwijnand/repos",
        "events_url": "https://api.github.com/users/dwijnand/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dwijnand/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 15:04:32 UTC",
      "updated_at": "2016-04-06 15:04:32 UTC",
      "body": "I'm also interested in this too.\r\n\r\nIt's nice to see that at least vertical formatting is preserved (from my 2 minute test)."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206420200",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206420200",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206420200,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 15:11:45 UTC",
      "updated_at": "2016-04-06 15:11:45 UTC",
      "body": "Let me point out some more points of alignment which are very common in scala code, and make a suggestion.\r\n```scala\r\n// tuples\r\nval colors = Map (\r\n  \"white\"   -> white,\r\n  \"green\"   -> green,\r\n  \"yellow\"  -> yellow,\r\n  \"red\"     -> red,\r\n  \"blue\"    -> blue,\r\n  \"cyan\"    -> cyan,\r\n  \"black\"   -> black,\r\n  \"magenta\" -> magenta\r\n)\r\n```\r\n```scala\r\n// dependencies\r\naddSbtPlugin(\"com.eed3si9n\"         % \"sbt-unidoc\"            % \"0.3.2\")\r\naddSbtPlugin(\"com.github.gseitz\"    % \"sbt-release\"           % \"1.0.0\")\r\naddSbtPlugin(\"com.jsuereth\"         % \"sbt-pgp\"               % \"1.0.0\")\r\naddSbtPlugin(\"com.typesafe.sbt\"     % \"sbt-ghpages\"           % \"0.5.3\")\r\naddSbtPlugin(\"com.typesafe.sbt\"     % \"sbt-site\"              % \"0.8.1\")\r\naddSbtPlugin(\"org.tpolecat\"         % \"tut-plugin\"            % \"0.4.0\")\r\naddSbtPlugin(\"pl.project13.scala\"   % \"sbt-jmh\"               % \"0.2.3\")\r\naddSbtPlugin(\"org.scalastyle\"      %% \"scalastyle-sbt-plugin\" % \"0.8.0\")\r\naddSbtPlugin(\"org.scoverage\"        % \"sbt-scoverage\"         % \"1.2.0\")\r\naddSbtPlugin(\"com.typesafe.sbt\"     % \"sbt-git\"               % \"0.8.4\")\r\naddSbtPlugin(\"org.scala-js\"         % \"sbt-scalajs\"           % \"0.6.8\")\r\naddSbtPlugin(\"com.github.tkawachi\"  % \"sbt-doctest\"           % \"0.3.5\")\r\naddSbtPlugin(\"org.xerial.sbt\"       % \"sbt-sonatype\"          %  \"1.1\")\r\n```\r\n```scala\r\n// comments\r\nfinal val CAPTURED      = 1 << 16       // variable is accessed from nested function.  Set by LambdaLift.\r\nfinal val LABEL         = 1 << 17       // method symbol is a label. Set by TailCall\r\nfinal val INCONSTRUCTOR = 1 << 17       // class symbol is defined in this/superclass constructor.\r\nfinal val SYNTHETIC     = 1 << 21       // symbol is compiler-generated (compare with ARTIFACT)\r\nfinal val STABLE        = 1 << 22       // functions that are assumed to be stable\r\nfinal val BRIDGE        = 1 << 26       // function is a bridge method. Set by Erasure\r\nfinal val ACCESSOR      = 1 << 27       // a value or variable accessor (getter or setter)\r\nfinal val SUPERACCESSOR = 1 << 28       // a super accessor\r\nfinal val MODULEVAR     = 1 << 30       // for variables: is the variable caching a module value\r\nfinal val IS_ERROR      = 1L << 32      // symbol is an error symbol\r\nfinal val OVERLOADED    = 1L << 33      // symbol is overloaded\r\n```\r\nAnd there are quite a number of others. Rather than focusing too much on covering many cases, I suggest hitting only the super common ones from \"first principles\" and inferring all the rest from the incoming code. If two or more lines have the same token in the same columns, surrounded by whitespace on both sides, then that is a candidate for alignment to preserve. That's likely to be too weak by itself, but it can be strengthened with additional heuristics - especially of course if it's three or more lines with a token in the same position."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206421317",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206421317",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206421317,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 15:14:51 UTC",
      "updated_at": "2016-04-06 15:14:51 UTC",
      "body": "The sbt example makes for an interesting one because you have `%` and `%%` offering a common alignment anchor. Obviously it's unlikely this can be inferred without help, but I'd say it's worth enumerating some common cases and allowing others to be specified by the user. Another frequent one is  `val`, `def`, and `type`."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206430455",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206430455",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206430455,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 15:30:42 UTC",
      "updated_at": "2016-04-06 15:30:42 UTC",
      "body": "The text editor plugin I use to manage my alignment is [AlignTab](https://github.com/randy3k/AlignTab) which I suggest bears examination. I actually find myself stuck wedded to sublime text despite many dissatisfactions because I cannot find the capabilities of this plugin in any other environment's alignment tool and I can't give up those forms of alignment. (I acknowledge they probably do exist elsewhere and I just haven't found them yet.)\r\n\r\nThe ability to left/center/right justify each column individually is one example. The ability to specify minimum distance between columns (especially, to control when there is no whitespace between tokens and when there must be a space) is another.\r\n\r\nHere is my configuration in sublime, which is somewhat brutal to make sense of thanks to sublime's insistence on storing everything in json. It does say a lot though about what I've found useful in my long slog through the world's scala code. Let me know if I can clarify the meaning of anything.\r\n```json\r\n{\r\n  \"named_patterns\" : {\r\n        \"first_equal\" : \" = (?:.*?[^{]$)/f\",\r\n        \"first_comma\" : \", /f\",\r\n        \"first_colon\" : \":/rclf\",\r\n          \"all_space\" : \"\\\\s+/l1l0\",\r\n              \"hocon\" : \": (?:.*?[^{]$)/r1l1l1f\",\r\n              \"typed\" : \"[:]/r0c1l1f\",\r\n           \"bash_var\" : \"[$][(]|[|][|]|[)]|[#]\",\r\n       \"sbt_operator\" : \"[&|@#<+:~]+[=][ ]/r1c1l1\",\r\n      \"quoted_string\" : \"[\\\"](?:[^\\\"\\\\\\\\]|\\\\\\\\.)*[\\\"]\",\r\n        \"first_arrow\" : \"(?<!:) [-=][>]/l1c1l1f\",\r\n         \"sbt_module\" : \"(?: = | %+ )/lrllclclclcl\",\r\n      \"align_generic\" : \"(?: [-=]>(?: |$)| [:+]{1,}= )/l1rf\",\r\n         \"align_esac\" : \"(?:[)]|[;][;])/r0c1l1\",\r\n               \"json\" : \":(?!.*[{])/r1c1l1f1\",\r\n               \"bang\" : \"[!]/r1c1l1f1\",\r\n    \"one_line_method\" : \"[ ][=][ ](?:.*?[^{]$)/l1f\",\r\n       \"go_interface\" : \"[()]/r0c0l0l0l0\",\r\n     \"one_line_class\" : \" extends |[ ][=][ ]| [{] | [}]$\"\r\n  },\r\n}\r\n```"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206431344",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206431344",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206431344,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 15:31:55 UTC",
      "updated_at": "2016-04-06 15:31:55 UTC",
      "body": "Here's an example of aligning around sbt's zoo of operators - no small task.\r\n```\r\n                       name :=  \"xyzzy\"\r\n                description :=  \"xyzzy description\"\r\n               organization :=  \"org.improving\"\r\n                   licenses :=  Seq(\"Apache-2.0\" -> url(\"http://www.apache.org/licenses/LICENSE-2.0\"))\r\n               scalaVersion :=  \"2.11.8\"\r\n                shellPrompt :=  prompt(name.value)\r\n                logBuffered :=  false\r\n               watchSources ++= sourcesIn(baseDirectory.value / \"project\")\r\n initialCommands in console <+= repl\r\n                       test <<= run in Test toTask \"\"\r\n                  maxErrors :=  10\r\n           triggeredMessage :=  Watched.clearWhenTriggered\r\n```"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206447499",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206447499",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206447499,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 16:18:45 UTC",
      "updated_at": "2016-04-06 16:18:45 UTC",
      "body": "Slightly more ambitiously, it should be possible to infer the missing column of alignment in the example which starts with `final val CAPTURED = ...`. Those lines should be aligned on `=`, `<<`, and `//` all, despite the incoming code failing to align on `<<`."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206453028",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206453028",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206453028,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 16:34:03 UTC",
      "updated_at": "2016-04-06 16:34:03 UTC",
      "body": "I'm happy this issue is getting the attention is deserves.\r\n\r\nFirst, scala.meta cannot yet parse sbt files. Please upvote https://github.com/scalameta/scalameta/issues/358 to convince Eugene this would be a worthwhileÂ feature in scala.meta.\r\n\r\nFor the sbt and the `colors` Map examples, the common pattern is that they're lists (application arguments, sbt source file statements) of infix applications. How about specifying which infix operators align together as some sort of `Set[Set[Token]]`?\r\n\r\nFor `val/def`, I believe the most common case is to align by `=` and comments.  Scalafmt could align those tokens if it sees a sequence of statements of same type (e.g. `Defn.Val`, `Defn.Def`), which are not separated by a blank line.  This would ignore differences between statements like annotations or modifiers, is that OK?\r\n\r\nAs @paulp suggests, this might be a good start from which we could derive a more general solution. Maybe something similar to AlignTab, thanks for the link.\r\n\r\nPS. with 0.1.6 out I've started working on 0.2.0, which will make configuration much easier. The currently useless `ScalaStyle` trait will become a `ScalafmtConfig` case class.\r\n"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206464621",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206464621",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206464621,
      "user": {
        "login": "michalrus",
        "id": 4366292,
        "avatar_url": "https://avatars.githubusercontent.com/u/4366292?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michalrus",
        "html_url": "https://github.com/michalrus",
        "followers_url": "https://api.github.com/users/michalrus/followers",
        "following_url": "https://api.github.com/users/michalrus/following{/other_user}",
        "gists_url": "https://api.github.com/users/michalrus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/michalrus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/michalrus/subscriptions",
        "organizations_url": "https://api.github.com/users/michalrus/orgs",
        "repos_url": "https://api.github.com/users/michalrus/repos",
        "events_url": "https://api.github.com/users/michalrus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/michalrus/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 17:00:06 UTC",
      "updated_at": "2016-04-06 17:00:06 UTC",
      "body": "@paupl, you *might* get something similar with Emacsâ align-regexp, e.g. http://haskell.github.io/haskell-mode/manual/latest/Aligning-code.html#Aligning-code. :smirk_cat: "
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206480966",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206480966",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206480966,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 17:35:38 UTC",
      "updated_at": "2016-04-06 17:35:38 UTC",
      "body": "> How about specifying which infix operators align together as some sort of `Set[Set[Token]]`?\r\n\r\nIn sbt's case you would not wish to enumerate all possible operators, nor could you do so in a way which wouldn't break with the addition of new ones. You don't necessarily need a full `Token => Boolean` predicate to identify them, but at least something with power equivalent to a regular expression."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/206485390",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-206485390",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 206485390,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-06 17:47:20 UTC",
      "updated_at": "2016-04-06 17:47:20 UTC",
      "body": "As an aside, one of the great forms of aggravation in alignment based on regexes is avoiding overreach when the same characters occur with different meaning, e.g.\r\n```scala\r\ndef f[A](x: A)(f: A => Int) = f(x) match {\r\n  case 1 => true \r\n  case 2 => false\r\n}\r\n```\r\nAt a lexical/regex level, one can apply heuristics to avoid the `=>` in the function type becoming aligned with the case arrows, but it becomes more and more ridiculous, always misses something, and obfuscates the meaningful portion of the machinery."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209065203",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-209065203",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 209065203,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-12 19:29:05 UTC",
      "updated_at": "2016-04-12 19:29:05 UTC",
      "body": "Release 0.2.0 should be live on Maven soon. It contains a basic implementation for token alignment. It can format all examples which were given in this thread. Test suite is [here](https://github.com/olafurpg/scalafmt/blob/2b1f8e674a0db5bb2e27e03974bcc4396b85b456/core/src/test/resources/align/AlignTokens.stat). The [actual implementation](https://github.com/olafurpg/scalafmt/blob/2b1f8e674a0db5bb2e27e03974bcc4396b85b456/core/src/main/scala/org/scalafmt/internal/FormatWriter.scala#L167) is around 130 lines of super imperative code, I hope to refactor it soon.\r\n\r\nYou can align by custom tokens OR simply use the default align tokens in the style `defaultWithAlign`, which aligns by `=>`, `->`, `=` assignments, `%` and `%%`. [Here](https://github.com/olafurpg/scalafmt/commit/b990ec78647db1a27621661b4f26265882d1a423#diff-ae5748146f114992c73f16c549cd5332R262) is the diff from formatting all files in scalafmt with  the `defaultWithAlign` style.\r\n\r\nYou can find documentation for using a custom style or defining custom align tokens in [the user docs](http://olafurpg.github.io/scalafmt/#Configuration).\r\n\r\nThe docs may be incomplete, don't hesitate to poke at me for more info. Let me know what you think :smile:, I'm especially happy to get more test cases."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209070822",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-209070822",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 209070822,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-12 19:36:39 UTC",
      "updated_at": "2016-04-12 19:37:58 UTC",
      "body": "I can point you at a boatload of (\"failing\") test cases, because so much of my code is already aligned. Just run scalafmt on [psp-std](https://github.com/paulp/psp-std) and look at where the existing alignment has been lost."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209073785",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-209073785",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 209073785,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-12 19:44:31 UTC",
      "updated_at": "2016-04-12 19:44:31 UTC",
      "body": "Wow, [you must have a really wide display](https://github.com/paulp/psp-std/blob/master/std/src/main/scala/Pstring.scala#L69)! You probably should increase `--maxColumn` to 120. I also see I forgot to align by `extends` in the `defaultWithAlign` style.\r\n\r\nI'll see how much time I have to look at it. With 0.2.0 I really need to start writing my thesis, hoping to hand it in around 5 weeks and I haven't started writing yet."
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209090146",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-209090146",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 209090146,
      "user": {
        "login": "paulp",
        "id": 9135,
        "avatar_url": "https://avatars.githubusercontent.com/u/9135?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paulp",
        "html_url": "https://github.com/paulp",
        "followers_url": "https://api.github.com/users/paulp/followers",
        "following_url": "https://api.github.com/users/paulp/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulp/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paulp/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulp/subscriptions",
        "organizations_url": "https://api.github.com/users/paulp/orgs",
        "repos_url": "https://api.github.com/users/paulp/repos",
        "events_url": "https://api.github.com/users/paulp/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paulp/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-12 20:30:33 UTC",
      "updated_at": "2016-04-12 20:30:33 UTC",
      "body": "Some other things I noticed after running\r\n\r\n  `sbt \"cli/run --style defaultWithAlign --maxColumn 160 -i -f /g/psp-std\"`\r\n\r\nfrom scalafmt 9547de0170. Take your time, I've been waiting enough years that I'm not counting the minutes.\r\n\r\nMost of the failures are long lists of type aliases, which should be a trivial fix. Example.\r\n```diff\r\n-  type BinOp[A]           = (A, A) => A // binary operation\r\n-  type OrderRelation[-A]  = (A, A) => Cmp\r\n-  type Relation[-A]       = (A, A) => Boolean\r\n-  type Suspended[+A]      = ToUnit[ToUnit[A]]\r\n-  type ToBool[-A]         = A => Boolean\r\n-  type ToInt[-A]          = A => Int\r\n-  type ToSelf[A]          = A => A\r\n-  type ToString[-A]       = A => String\r\n-  type ToUnit[-A]         = A => Unit\r\n+  type BinOp [A] = (A, A) => A // binary operation\r\n+  type OrderRelation [-A] = (A, A) => Cmp\r\n+  type Relation [-A] = (A, A) => Boolean\r\n+  type Suspended [+A] = ToUnit[ToUnit[A]]\r\n+  type ToBool [-A] = A => Boolean\r\n+  type ToInt [-A] = A => Int\r\n+  type ToSelf [A] = A => A\r\n+  type ToString [-A] = A => String\r\n+  type ToUnit [-A] = A => Unit\r\n```\r\n\r\nThis next one is a site which would be handled naturally if you inferred alignment from the opening and closing curly braces already being column-aligned (as well as `extends`) but will otherwise frustrate plausible attempts to anticipate it.\r\n```diff\r\n-trait Eq[-A]   extends Any            { def eqv(x: A, y: A): Boolean }\r\n-trait Hash[-A] extends Any with Eq[A] { def hash(x: A): Int          }\r\n+trait Eq[-A] extends Any { def eqv(x: A, y: A): Boolean }\r\n+\r\n+trait Hash[-A] extends Any with Eq[A] { def hash(x: A): Int }\r\n```\r\n\r\nLast one is subtly but somewhat dangerously wrong, because the assignments inside the block should not be aligned with the containing function's body: alignment shouldn't jump scope.\r\n```diff\r\n object Cleaver {\r\n   def apply[R, A, B](f: (A, B) => R, l: R => A, r: R => B): Cleaver[R, A, B] = new Cleaver[R, A, B] {\r\n-    def split(x: R): A -> B = (l(x), r(x))\r\n-    def join(x: A, y: B): R = f(x, y)\r\n-    def join(x: A -> B): R  = f(x._1, x._2)\r\n+    def split(x: R): A -> B                                                  = (l(x), r(x))\r\n+    def join(x: A, y: B): R                                                  = f(x, y)\r\n+    def join(x: A -> B): R                                                   = f(x._1, x._2)\r\n   }\r\n }\r\n```\r\n"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209456637",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-209456637",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 209456637,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-13 14:00:23 UTC",
      "updated_at": "2016-04-13 14:00:23 UTC",
      "body": "@paulp The last one is an actual bug, see #152.\r\n\r\nThe first three are fixable with configuration, although it is a bit awkward\r\n\r\n```scala\r\n\r\nÂ ollieÂ î°Â ~Â î±Â devÂ î±Â psp-stdÂ î°Â scalafmt -f foo.scala  // no vertical alignment\r\nobject A {\r\n  x match {\r\n    case 1 => 2 -> 2 // this is a comment\r\n    case 11 => 22 -> 22 // another one\r\n    case 111 => 222 -> 222 // third!\r\n\r\n    case 1111 => 1111 // Please ignore me, I'm a loner\r\n  }\r\n  trait B extends A\r\n  trait BB extends A\r\n\r\n  class B extends A\r\n  class BB extends A\r\n\r\n  type C = Int\r\n  type CC = String\r\n\r\n  trait Eq[-A] extends Any { def eqv(x: A, y: A): Boolean }\r\n  trait Hash[-A] extends Any with Eq[A] { def hash(x: A): Int }\r\n}\r\n\r\nÂ ollieÂ î°Â ~Â î±Â devÂ î±Â psp-stdÂ î°Â cat .scalafmt                                                               Â î²Â î Â master\r\n--alignTokens =;Defn.(Va(l|r)|Def|Type),extends;Defn.*,{;Template,};Template,=>;Case,->;Term.ApplyInfix\r\nÂ ollieÂ î°Â ~Â î±Â devÂ î±Â psp-stdÂ î°Â scalafmt -c .scalafmt -f foo.scala // with vertical alignment\r\nobject A {\r\n  x match {\r\n    case 1   => 2   -> 2 // this is a comment\r\n    case 11  => 22  -> 22 // another one\r\n    case 111 => 222 -> 222 // third!\r\n\r\n    case 1111 => 1111 // Please ignore me, I'm a loner\r\n  }\r\n  trait B  extends A\r\n  trait BB extends A\r\n\r\n  class B  extends A\r\n  class BB extends A\r\n\r\n  type C  = Int\r\n  type CC = String\r\n\r\n  trait Eq[-A]   extends Any            { def eqv(x: A, y: A): Boolean }\r\n  trait Hash[-A] extends Any with Eq[A] { def hash(x: A): Int          }\r\n}\r\n```\r\n\r\nThere is a bug if you try to align by comments `//`, which I've described in #151"
    },
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/209460465",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/138#issuecomment-209460465",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/138",
      "id": 209460465,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-04-13 14:05:05 UTC",
      "updated_at": "2016-04-13 14:05:05 UTC",
      "body": "Also note that #153 causes problems when you want to align top-level classes/traits"
    }
  ],
  "created_at": "2016-04-02 20:45:26 UTC",
  "updated_at": "2016-04-13 14:05:05 UTC",
  "closed_at": "2016-04-12 18:47:50 UTC",
  "body": "Original:\r\n```scala\r\n    def address = column[String](\"address\", O.PrimaryKey)\r\n    def name = column[String](\"name\")\r\n    def status = column[Int](\"status\")\r\n```\r\n\r\nScalafmt:\r\n```scala\r\n    def address = column[String](\"address\", O.PrimaryKey)\r\n    def name = column[String](\"name\")\r\n    def status = column[Int](\"status\")\r\n```\r\n\r\nI would like the input to look like this:\r\n```scala\r\n    def address = column[String](\"address\", O.PrimaryKey)\r\n    def name    = column[String](\"name\")\r\n    def status  = column[Int](\"status\")\r\n```\r\n\r\nUsing 0.1.5"
}