{
  "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/251",
  "repository_url": "https://api.github.com/repos/olafurpg/scalafmt",
  "labels_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/251/labels{/name}",
  "comments_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/251/comments",
  "events_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/251/events",
  "html_url": "https://github.com/olafurpg/scalafmt/issues/251",
  "id": 155476845,
  "number": 251,
  "title": "Blank line before/after 2+lines defs",
  "user": {
    "login": "sjrd",
    "id": 535934,
    "avatar_url": "https://avatars.githubusercontent.com/u/535934?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sjrd",
    "html_url": "https://github.com/sjrd",
    "followers_url": "https://api.github.com/users/sjrd/followers",
    "following_url": "https://api.github.com/users/sjrd/following{/other_user}",
    "gists_url": "https://api.github.com/users/sjrd/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sjrd/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sjrd/subscriptions",
    "organizations_url": "https://api.github.com/users/sjrd/orgs",
    "repos_url": "https://api.github.com/users/sjrd/repos",
    "events_url": "https://api.github.com/users/sjrd/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sjrd/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/labels/enhancement",
      "name": "enhancement",
      "color": "84b6eb"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "milestone": null,
  "comments": [
    {
      "url": "https://api.github.com/repos/olafurpg/scalafmt/issues/comments/220553013",
      "html_url": "https://github.com/olafurpg/scalafmt/issues/251#issuecomment-220553013",
      "issue_url": "https://api.github.com/repos/olafurpg/scalafmt/issues/251",
      "id": 220553013,
      "user": {
        "login": "olafurpg",
        "id": 1408093,
        "avatar_url": "https://avatars.githubusercontent.com/u/1408093?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/olafurpg",
        "html_url": "https://github.com/olafurpg",
        "followers_url": "https://api.github.com/users/olafurpg/followers",
        "following_url": "https://api.github.com/users/olafurpg/following{/other_user}",
        "gists_url": "https://api.github.com/users/olafurpg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/olafurpg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/olafurpg/subscriptions",
        "organizations_url": "https://api.github.com/users/olafurpg/orgs",
        "repos_url": "https://api.github.com/users/olafurpg/repos",
        "events_url": "https://api.github.com/users/olafurpg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/olafurpg/received_events",
        "type": "User",
        "site_admin": false
      },
      "created_at": "2016-05-20 08:59:21 UTC",
      "updated_at": "2016-05-20 08:59:21 UTC",
      "body": "I agree that it would be nice to have blank lines inserted for you. It's a bit tricky however, for example should scalafmt remove blank lines when a multiline method becomes single-line?\r\n\r\nI added the label enhancement since this is not a blocker, you can insert the blank lines yourself to get the desired output."
    }
  ],
  "created_at": "2016-05-18 11:20:14 UTC",
  "updated_at": "2016-05-20 08:59:21 UTC",
  "closed_at": null,
  "body": "Original:\r\n```scala\r\ntrait OESVertexArrayObject extends js.Object {\r\n  val VERTEX_ARRAY_BINDING_OES: Int = js.native\r\n  def createVertexArrayOES(): WebGLVertexArrayObjectOES = js.native\r\n  def deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): Unit = js.native\r\n  def isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): Boolean = js.native\r\n  def bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES): Unit = js.native\r\n}\r\n```\r\n\r\nScalafmt:\r\n```scala\r\ntrait OESVertexArrayObject extends js.Object {\r\n  val VERTEX_ARRAY_BINDING_OES: Int = js.native\r\n  def createVertexArrayOES(): WebGLVertexArrayObjectOES = js.native\r\n  def deleteVertexArrayOES(\r\n      arrayObject: WebGLVertexArrayObjectOES): Unit = js.native\r\n  def isVertexArrayOES(\r\n      arrayObject: WebGLVertexArrayObjectOES): Boolean = js.native\r\n  def bindVertexArrayOES(\r\n      arrayObject: WebGLVertexArrayObjectOES): Unit = js.native\r\n}\r\n```\r\n\r\nI would like the input to look like this:\r\n```scala\r\ntrait OESVertexArrayObject extends js.Object {\r\n  val VERTEX_ARRAY_BINDING_OES: Int = js.native\r\n  def createVertexArrayOES(): WebGLVertexArrayObjectOES = js.native\r\n\r\n  def deleteVertexArrayOES(\r\n      arrayObject: WebGLVertexArrayObjectOES): Unit = js.native\r\n\r\n  def isVertexArrayOES(\r\n      arrayObject: WebGLVertexArrayObjectOES): Boolean = js.native\r\n\r\n  def bindVertexArrayOES(\r\n      arrayObject: WebGLVertexArrayObjectOES): Unit = js.native\r\n}\r\n```\r\n\r\nUsing\r\n* 0.2.5 --Scala.js\r\n"
}